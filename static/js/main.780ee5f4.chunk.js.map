{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/Header.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","Header","navigate","useHistory","redirectButton","path","push","className","onClick","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","arrTotal","initTotal","useState","description","amount","date","creditData","setCreditData","useEffect","fetch","then","response","ok","json","jsonRes","max","map","info","reduce","prev","current","GetTotal","arr","getItem","arr1","i","length","parseFloat","tcred","credit","tdeb","debit","FetchCredits","pos","slice","setItem","key","item","localStorage","JSON","stringify","parse","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","AddCredits","listItems","Number","sum","changeDescription","bind","changeAmount","event","mockCredit","concat","creditSum","creditUpdate","placeholder","required","toFixed","li","Debits","debitData","setDebitData","FetchDebits","AddDebits","mockDebit","debitSum","debitUpdate","InitialApp","initalDebit","initalCredit","GetInitialDebit","GetInitialCredit","removeItem","App","logInInfo","creditInfo","newUser","currentUser","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.780ee5f4.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n      <div>\n\n        <div>\n        Total Balance: ${this.props.accountBalance}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;\n","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        \n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport './Header.css'\n\nexport default function Header() {\n    \n    const navigate = useHistory();\n\n    const redirectButton = (path) => {\n        navigate.push(path)\n    } \n\n  return (\n    <div>\n        <div className=\"Header\">\n\n            <div className=\"Header_left\">\n            \n                <button onClick={() => redirectButton(\"/\")} className=\"homeButton\">Home</button>\n            </div>\n\n            <div className=\"Header_right\">\n                <button onClick={() => redirectButton(\"/userProfile\")} className=\"linkButton\">User Profile</button>\n\n                <button onClick={() => redirectButton(\"/login\")}  className=\"linkButton\">Login</button>\n\n                <button onClick={() => redirectButton(\"/credits\")} className=\"linkButton\">Credits</button>\n\n                <button onClick={() => redirectButton(\"/debits\")}  className=\"linkButton\">Debits</button>\n\n\n            </div>\n        \n        </div>\n    </div>\n  )\n}\n","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport Header from './Header';\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <Header/>\n          <h1>User Profile</h1>\n\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n          \n          <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Header from './Header'\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n    // Render the login form\n    return (\n      <div>\n        <Header />\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Credits.js\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./Credits.css\";\nimport Header from './Header';\nimport AccountBalance from './AccountBalance';\n\n\nconst Credits = (props) => {\n\n    // global variables\n    const navigate = useHistory();\n    var arrTotal = 0;\n    var initTotal = 0;\n    GetTotal()\n    \n    // get the user addCredits from localStorage if there is any\n    var arr = getItem('user1')\n    var arr1 = []\n\n    if (arr !== null){\n        for (let i = 0; i < arr.length; i++) {\n            arrTotal += parseFloat(arr[i].amount)\n          }\n    }\n\n    //console.log(props)\n    var tcred = props.credit\n    var tdeb = props.debit\n    \n    // function used to get the inital sum from the json file\n    function GetTotal() {\n      \n        const [creditData, setCreditData] = useState([{\n            description: '',\n            amount: '',\n            date: '',\n        }])\n\n        useEffect(() => {fetch('https://moj-api.herokuapp.com/credits')\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n            }).then(jsonRes => setCreditData(jsonRes));\n        }, [])\n        \n\n        var num = 0;\n        var max = 0;\n\n        creditData.map((info) => {initTotal = creditData.reduce(function(prev, current) {\n                    return prev + +current.amount;\n                    }, num);\n\n                    if (initTotal > max) {\n                        max = initTotal;\n                    }\n\n                    return (\n                        <h1></h1>\n                        \n                    )\n                })\n        \n        return max;\n    }\n\n    // function used to fetch the json file and display it \n    function FetchCredits() {\n        const [creditData, setCreditData] = useState([{\n            description: '',\n            amount: '',\n            date: '',\n        }])\n\n        useEffect(() => {fetch('https://moj-api.herokuapp.com/credits')\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n            }).then(jsonRes => setCreditData(jsonRes));\n        }, [])\n\n        var num = 0;\n\n        return(\n            <div className='creditsContainer'>\n                {creditData.map((info,pos) => {\n                    initTotal = creditData.reduce(function(prev, current) {\n                        return prev + +current.amount;\n                    }, num);\n                    return (\n                      \n                            <div className='creditCardContainer' key={pos}>\n                                <div className='creditsCard'>\n                                    \n                                    <div className='infoDiv'>{info.description}</div>\n                                    <div className='infoDiv'>${info.amount}</div>\n                                    <div className='infoDiv'>{info.date.slice(0,10)}</div>\n                                </div>\n                                \n                            </div>\n                        \n                    )\n                })}\n            </div>\n        )\n    }\n   \n\n    // function used to add user addCredits to localStorage\n    function setItem(key, item) {\n        localStorage.setItem(key, JSON.stringify(item));\n    }\n\n    // function used to retrieve user addCredits from localStorage\n    function getItem(key) {\n        const item = localStorage.getItem(key);\n        return JSON.parse(item);\n    }\n\n    // function that get the current date\n    function getDate() {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); \n        var yyyy = today.getFullYear();\n        \n        today = yyyy + '-' + mm + '-' + dd;\n        return today;\n    }\n\n    // AddCredits class\n    class AddCredits extends Component {\n        constructor() {\n            super();\n            this.state = {\n                listItems: [],\n                description: '',\n                amount: Number,\n                date: getDate(),\n            }\n            this.sum = {\n                max: initTotal,\n            }\n\n            this.changeDescription = this.changeDescription.bind(this);\n            this.changeAmount = this.changeAmount.bind(this);\n            this.onSubmit = this.onSubmit.bind(this);\n        }\n\n        // description setter\n        changeDescription(event) {\n            this.setState({\n                description:event.target.value\n            })\n        }\n        \n        // amount setter\n        changeAmount(event) {\n            this.setState({\n                amount:event.target.value\n            })\n        }\n\n        // add userinput inside listItems when addCredits is clicked\n        onSubmit(event) {\n            event.preventDefault();\n\n            this.setState({\n                listItems: [...this.state.listItems, {description: this.state.description, amount: this.state.amount, date: this.state.date}]\n            })\n\n            this.setState({\n                description:'',\n                amount:Number,\n            })\n\n        }\n\n        // route to a differnt page when header buttons are clicked. Also update credits in App.js\n        creditUpdate(event,path){\n            event.preventDefault();\n            props.mockCredit(tcred)\n            navigate.push(path)\n        }\n\n        render() {\n            // add the user inputs in localStorage so we can print them out when the page is refreshed\n            if (arr !== null){\n                setItem('user1',arr.concat(this.state.listItems))\n            }\n            else{\n                setItem('user1',this.state.listItems)\n            }\n\n            // get the local storage addCredits\n            arr1 = getItem('user1')\n            \n            //setItem('user1',this.state.listItems)\n            //console.log(arr1)\n\n            //update the current credit sum\n            let creditSum = this.state.listItems.reduce(function(prev, current){\n                return prev + +current.amount\n            }, initTotal);\n\n            //update the total credit\n            tcred = creditSum + arrTotal\n            \n   \n            return (\n                <div className='creditsMain'>\n                    {/* route buttons */}\n                     <div className=\"creditHeader\">\n                        <div className=\"creditHeader_left\">\n                            <button onClick={(e) => {this.creditUpdate(e, '/')}} className=\"credit_homeButton\">Home</button>\n                        </div>\n            \n                        <div className=\"creditHeader_right\">\n                            <button onClick={(e) => {this.creditUpdate(e, \"/userProfile\")}} className=\"credit_linkButton\">User Profile</button>\n            \n                            <button onClick={(e) => {this.creditUpdate(e, \"/login\")}} className=\"credit_linkButton\">Login</button>\n            \n                            <button  onClick={(e) => {this.creditUpdate(e, \"/credits\")}} className=\"credit_linkButton\">Credits</button>\n            \n                            <button  onClick={(e) => {this.creditUpdate(e, \"/debits\")}} className=\"credit_linkButton\">Debits</button>\n                        </div>\n                    </div>\n\n                    {/* user input boxes and display total balance and current credit */}\n                    <div className='creditsLeft'>\n                        <h1>Credits</h1>\n                \n                        <form onSubmit={this.onSubmit} className=\"formContainer\">\n                            <input  className=\"formBox\" type=\"text\" placeholder=\"Description\" name=\"description\" onChange={this.changeDescription} value={this.state.description} required />\n                            <input className=\"formBox\" type=\"number\" placeholder=\"Amount\" name=\"amount\" onChange={this.changeAmount} value={this.state.amount} required />\n                            <button className=\"submitBox\" type=\"submit\">Add Credits</button>\n                        </form>\n                        <div>\n                            <div className='formBox'>Credit: ${(creditSum + arrTotal).toFixed(2)}</div>\n                            <AccountBalance accountBalance={parseFloat(tcred - tdeb).toFixed(2)}/>\n                        </div>\n                        \n                    </div>\n\n                    {/* display the user addCredits in list form */}\n                    <div className='creditsRight'>\n                            <FetchCredits/>\n                            <div>\n                                {\n                                    arr1.map((li,key) => \n                                    <div className=\"newEntryCardContainer\">\n                                        <div {...{key}} className=\"newEntryCard\">\n                                            <div className=\"infoDiv\" >{li.description}</div>\n                                            <div className=\"infoDiv\" >${li.amount}</div>\n                                            <div className=\"infoDiv\" >{li.date}</div>\n                                        </div>\n                                    </div>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n            )\n                            \n        }\n    }\n\n  return (\n    <div className=\"creditsContainer\">\n    \n        {/*<div className=\"nav\">\n            <Header/>\n            \n        </div>*/}\n\n        <div className=\"creditsBody\">\n            <AddCredits/>\n        </div>\n\n        \n    </div>\n  )\n}\n\nexport default Credits;","// src/components/Debits.js\n\nimport React, { useEffect, useState, Component } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport \"./Debits.css\";\nimport Header from './Header';\nimport AccountBalance from './AccountBalance';\n\n\nconst Debits = (props) => {\n\n    // global variables\n    const navigate = useHistory();\n    var arrTotal = 0;\n    var initTotal = 0;\n    GetTotal()\n\n    // get the user addCredits from localStorage if there is any\n    var arr = getItem('user')\n    var arr1 = []\n\n    if (arr !== null){\n        for (let i = 0; i < arr.length; i++) {\n            arrTotal += parseFloat(arr[i].amount)\n          }\n    }\n    \n    // var arr = []\n    //console.log(props)\n\n    var tcred = props.credit\n    var tdeb = props.debit\n\n    // function used to get the inital sum from the json file\n    function GetTotal() {\n      \n        const [debitData, setDebitData] = useState([{\n            description: '',\n            amount: '',\n            date: '',\n        }])\n\n        useEffect(() => {fetch('https://moj-api.herokuapp.com/debits')\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n            }).then(jsonRes => setDebitData(jsonRes));\n        }, [])\n        \n\n        var num = 0;\n        var max = 0;\n\n        debitData.map((info) => {initTotal = debitData.reduce(function(prev, current) {\n                    return prev + +current.amount;\n                    }, num);\n\n                    if (initTotal > max) {\n                        max = initTotal;\n                    }\n\n                    return (\n                        <h1></h1>\n                        \n                    )\n                })\n        \n        return max;\n    }\n\n    // function used to fetch the json file and display it \n    function FetchDebits() {\n        const [debitData, setDebitData] = useState([{\n            description: '',\n            amount: '',\n            date: '',\n        }])\n\n        useEffect(() => {fetch('https://moj-api.herokuapp.com/debits')\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n            }).then(jsonRes => setDebitData(jsonRes));\n        }, [])\n\n        var num = 0;\n\n        \n        \n        return(\n            <div className='debitsContainer'>\n                {debitData.map((info,pos) => {\n                    initTotal = debitData.reduce(function(prev, current) {\n                        return prev + +current.amount;\n                    }, num);\n                    return (\n                      \n                            <div className='debitCardContainer' key={pos}>\n                                <div className='debitsCard'>\n                                    \n                                    <div className='infoDiv'>{info.description}</div>\n                                    <div className='infoDiv'>${info.amount}</div>\n                                    <div className='infoDiv'>{info.date.slice(0,10)}</div>\n                                </div>\n                                \n                            </div>\n                        \n                    )\n                })}\n            </div>\n        )\n    }\n   \n    \n    // function used to add user addCredits to localStorage\n    function setItem(key, item) {\n        localStorage.setItem(key, JSON.stringify(item));\n    }\n\n    // function used to retrieve user addCredits from localStorage\n    function getItem(key) {\n        const item = localStorage.getItem(key);\n        return JSON.parse(item);\n    }\n\n    // function that get the current date\n    function getDate() {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); \n        var yyyy = today.getFullYear();\n        \n        today = yyyy + '-' + mm + '-' + dd;\n        return today;\n    }\n\n    // AddDebit class\n    class AddDebits extends Component {\n        constructor() {\n            super();\n            this.state = {\n                listItems: [],\n                description: '',\n                amount: Number,\n                date: getDate(),\n            }\n            this.sum = {\n                max: initTotal,\n            }\n\n            this.changeDescription = this.changeDescription.bind(this);\n            this.changeAmount = this.changeAmount.bind(this);\n            this.onSubmit = this.onSubmit.bind(this);\n        }\n\n         // description setter\n        changeDescription(event) {\n            this.setState({\n                description:event.target.value\n            })\n        }\n        \n        // amount setter\n        changeAmount(event) {\n            this.setState({\n                amount:event.target.value\n            })\n        }\n\n        // add userinput inside listItems when addDebits is clicked\n        onSubmit(event) {\n\n            event.preventDefault();\n\n            this.setState({\n                listItems: [...this.state.listItems, {description: this.state.description, amount: this.state.amount, date: this.state.date}]\n            })\n\n            this.setState({\n                description:'',\n                amount:Number,\n            })\n\n        }\n\n        // route to a differnt page when header buttons are clicked. Also update debits in App.js\n        debitUpdate(event, path){\n            event.preventDefault();\n            props.mockDebit(tdeb)\n            navigate.push(path) \n        }\n\n        \n\n\n        render() {\n\n            // add the user inputs in localStorage so we can print them out when the page is refreshed\n            if (arr !== null){\n                setItem('user',arr.concat(this.state.listItems))\n            }\n            else{\n                setItem('user',this.state.listItems)\n            }\n            \n            // get the local storage addDebits\n            arr1 = getItem('user')\n\n            //setItem('user',this.state.listItems)\n            //console.log(arr1)\n\n            //update the current debit sum\n            let debitSum = this.state.listItems.reduce(function(prev, current){\n                return prev + +current.amount\n            }, initTotal);\n\n            //update the total credit\n            tdeb = debitSum + arrTotal\n   \n            return (\n                <div className='debitsMain'>\n                    {/* route buttons */}\n                    <div className=\"debitHeader\">\n                        <div className=\"debitHeader_left\">\n                            <button onClick={(e) => {this.debitUpdate(e, '/')}} className=\"debit_homeButton\">Home</button>\n                        </div>\n            \n                        <div className=\"debitHeader_right\">\n                            <button onClick={(e) => {this.debitUpdate(e, \"/userProfile\")}} className=\"debit_linkButton\">User Profile</button>\n            \n                            <button onClick={(e) => {this.debitUpdate(e, \"/login\")}} className=\"debit_linkButton\">Login</button>\n            \n                            <button  onClick={(e) => {this.debitUpdate(e, \"/credits\")}} className=\"debit_linkButton\">Credits</button>\n            \n                            <button  onClick={(e) => {this.debitUpdate(e, \"/debits\")}} className=\"debit_linkButton\">Debits</button>\n                        </div>\n                    </div>\n\n                    {/* user input boxes and display total balance and current debit */}\n                    <div className='debitsLeft'>\n                        <h1>Debits</h1>\n                \n                        <form onSubmit={this.onSubmit} className=\"formContainer\">\n                            <input  className=\"formBox\" type=\"text\" placeholder=\"Description\" name=\"description\" onChange={this.changeDescription} value={this.state.description} required />\n                            <input className=\"formBox\" type=\"number\" placeholder=\"Amount\" name=\"amount\" onChange={this.changeAmount} value={this.state.amount} required />\n                            <button className=\"submitBox\" type=\"submit\">Add Debit</button>\n                        </form>\n                        <div>\n                            <div className='formBox'>Debit: ${(debitSum + arrTotal).toFixed(2)}</div>\n\n                        </div>\n                        <div>\n                          <AccountBalance accountBalance={(parseFloat(tcred - tdeb)).toFixed(2)}/>\n                        </div>\n                    </div>\n\n                    {/* display the user addDebits in list form */}\n                    <div className='debitsRight'>\n                            <FetchDebits/>\n                            <div>\n                                {\n                                    arr1.map((li,key) => \n                                    <div className=\"newEntryCardContainer\">\n                                        <div {...{key}} className=\"newEntryCard\">\n                                            <div className=\"infoDiv\" >{li.description}</div>\n                                            <div className=\"infoDiv\" >${li.amount}</div>\n                                            <div className=\"infoDiv\" >{li.date}</div>\n                                        </div>\n                                    </div>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n            )\n                            \n        }\n    }\n\n  return (\n    <div className=\"debitsContainer\">\n    \n        {/*<div className='nav'>\n        <Header/>\n        </div>*/}\n\n        <div className=\"debitsBody\">\n            <AddDebits/>\n        </div>\n\n        \n    </div>\n  )\n}\n\nexport default Debits;","// src/App.js\n\nimport React, {Component, useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\n\nconst InitialApp = () => {\n\n  // get the inital debit and credit values from the json file\n  var initalDebit= 0\n  var initalCredit = 0\n  GetInitialDebit()\n  GetInitialCredit()\n\n  // when the user first starts the program remove everything in local storage\n  localStorage.removeItem(\"user1\");\n  localStorage.removeItem(\"user\");\n\n  // get the inital debit sum\n  function GetInitialDebit() {\n\n    const [debitData, setDebitData] = useState([{\n        description: '',\n        amount: '',\n        date: '',\n    }])\n\n    useEffect(() => {fetch('https://moj-api.herokuapp.com/debits')\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then(jsonRes => setDebitData(jsonRes));\n    }, [])\n    \n    var num = 0;\n    var max = 0;\n\n    debitData.map((info) => {initalDebit = debitData.reduce(function(prev, current) {\n                return prev + +current.amount;\n                }, num);\n\n                if (initalDebit > max) {\n                    max = initalDebit;\n                }\n\n                return (\n                    <h1></h1>\n                    \n                )\n            })\n    \n    return max;\n  }\n\n  // get the inital credit sum\n  function GetInitialCredit() {\n        \n    const [creditData, setCreditData] = useState([{\n        description: '',\n        amount: '',\n        date: '',\n    }])\n\n    useEffect(() => {fetch('https://moj-api.herokuapp.com/credits')\n        .then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n        }).then(jsonRes => setCreditData(jsonRes));\n    }, [])\n    \n\n    var num = 0;\n    var max = 0;\n\n    creditData.map((info) => {initalCredit = creditData.reduce(function(prev, current) {\n                return prev + +current.amount;\n                }, num);\n\n                if (initalCredit > max) {\n                    max = initalCredit;\n                }\n\n                return (\n                    <h1></h1>\n                    \n                )\n            })\n    \n    return max;\n  }\n\n  //console.log(initalDebit)\n  //console.log(initalCredit)\n\n\n\n  class App extends Component {\n    constructor() {  // Create and initialize state\n      super(); \n      this.state = {\n        accountBalance: 14568.27,\n        credit: initalCredit,\n        debit: initalDebit,\n        currentUser: {\n          userName: 'Joe Smith',\n          memberSince: '07/23/96',\n        }\n      }\n    }\n\n\n    mockDebit = (logInInfo) => {\n      //console.log(logInInfo)\n      this.setState({debit: logInInfo})\n    }\n\n    mockCredit = (creditInfo) => {\n      //console.log(logInInfo)\n    \n      this.setState({credit: creditInfo})\n    }\n\n\n    // Update state's currentUser (userName) after \"Log In\" button is clicked\n    mockLogIn = (logInInfo) => {  \n      const newUser = {...this.state.currentUser}\n      newUser.userName = logInInfo.userName\n      this.setState({currentUser: newUser})\n    }\n\n    // Create Routes and React elements to be rendered using React components\n    render() {  \n      \n      const DebitComponent = () => (<Debits credit={this.state.credit} debit={this.state.debit} mockDebit={this.mockDebit}/>);\n      const CreditComponent = () => (<Credits credit={this.state.credit} debit={this.state.debit} mockCredit={this.mockCredit}/>);\n      const HomeComponent = () => (<Home accountBalance={(this.state.credit - this.state.debit).toFixed(2)}/>);\n      const UserProfileComponent = () => (\n        <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n      );\n      const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n        \n      return (\n        <Router>\n          <div>\n            <Route exact path=\"/\" render={HomeComponent}/>\n            <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/login\" render={LogInComponent}/>\n            <Route exact path=\"/credits\" render={CreditComponent}/>\n            <Route exact path=\"/debits\" render={DebitComponent}/>\n          </div>\n        </Router>\n      );\n    }\n  }\n\n  return(\n    <div>\n      <App/>  \n    </div>\n  )\n\n}\n\nexport default InitialApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}